apiVersion: v1
kind: Service
metadata:
  name: {{ include "autocraft.fullname" . }}-droppy-svc
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "autocraft.labels" . | nindent 4 }}
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 8989
      nodePort: {{ .Values.droppy.port }}
      protocol: TCP
  selector:
    app: droppy

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "autocraft.fullname" . }}-droppy-config
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "autocraft.labels" . | nindent 4 }}
spec:
  storageClassName: {{ quote ( index .Values "nfs-server-provisioner" ).storageClass.name }}
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Mi

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-droppy-config-json
  namespace: {{ .Release.Namespace }}
data:
  config.json: |-
    {
      "listeners" : [
        {
          "host": ["0.0.0.0", "::"],
          "port": 8989,
          "protocol": "http"
        }
      ],
      "public": false,
      "timestamps": true,
      "linkLength": 5,
      "linkExtensions": false,
      "logLevel": 2,
      "maxFileSize": 0,
      "updateInterval": 1000,
      "pollingInterval": 20000,
      "keepAlive": 20000,
      "allowFrame": false,
      "readOnly": false,
      "ignorePatterns": [],
      "watch": true,
      "headers": {}
    }

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-droppy-autocraft-filemanager
  namespace: {{ .Release.Namespace }}
  labels:
    app: droppy
    {{- include "autocraft.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: droppy
  template:
    metadata:
      labels:
        app: droppy
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
                - key: autocraft-backend
                  operator: In
                  values:
                    - "true"
      initContainers:
      # Copy initial config from the config map
      # Necessary bc droppy tries chowning config.json
      - name: config-copier
        image: busybox
        command: ['cp', '-f', '/cfmap/config.json', '/droppyconfig/config.json']
        volumeMounts:
        - name: config
          mountPath: /droppyconfig
        - name: config-json
          mountPath: /cfmap

      containers:
      - name: droppy-autocraft-filemanager
        image: silverwind/droppy
        ports:
        - containerPort: 8989
        volumeMounts:
            - name: config
              mountPath: /config
            - name: minecraft
              mountPath: /files
      volumes:
        # Config folder which holds databases
        - name: config
          persistentVolumeClaim:
            claimName: {{ include "autocraft.fullname" . }}-droppy-config
        # Override config.json in config folder with values from cfg map
        - name: config-json
          configMap:
            name: {{ .Release.Name }}-droppy-config-json
        # Minecraft server files
        - name: minecraft
          persistentVolumeClaim:
            claimName: {{ include "autocraft.minecraftStoragePVC" . }}
  # These containers are run during pod initialization

